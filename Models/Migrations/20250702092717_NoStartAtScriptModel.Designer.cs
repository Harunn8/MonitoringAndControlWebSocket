// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Models.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250702092717_NoStartAtScriptModel")]
    partial class NoStartAtScriptModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Models.OidMapping", b =>
                {
                    b.Property<Guid>("ParameterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Oid")
                        .HasColumnType("text");

                    b.Property<string>("ParameterName")
                        .HasColumnType("text");

                    b.Property<Guid?>("SnmpDeviceId")
                        .HasColumnType("uuid");

                    b.HasKey("ParameterId");

                    b.HasIndex("SnmpDeviceId");

                    b.ToTable("OidMapping");
                });

            modelBuilder.Entity("Models.ScriptModels", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Script")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ScriptName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Scripts");
                });

            modelBuilder.Entity("Models.SnmpDevice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("DeviceName")
                        .HasColumnType("text");

                    b.Property<string>("IpAddress")
                        .HasColumnType("text");

                    b.Property<int>("Port")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("Models.TcpDataV2", b =>
                {
                    b.Property<Guid>("ParameterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ParameterName")
                        .HasColumnType("text");

                    b.Property<string>("Request")
                        .HasColumnType("text");

                    b.Property<Guid?>("TcpDeviceV2Id")
                        .HasColumnType("uuid");

                    b.HasKey("ParameterId");

                    b.HasIndex("TcpDeviceV2Id");

                    b.ToTable("TcpDataV2");
                });

            modelBuilder.Entity("Models.TcpDeviceV2", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("DeviceName")
                        .HasColumnType("text");

                    b.Property<string>("IpAddress")
                        .HasColumnType("text");

                    b.Property<int>("Port")
                        .HasColumnType("integer");

                    b.Property<List<string>>("TcpFormat")
                        .HasColumnType("text[]");

                    b.HasKey("Id");

                    b.ToTable("TcpDevices");
                });

            modelBuilder.Entity("Models.UserV2", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Models.OidMapping", b =>
                {
                    b.HasOne("Models.SnmpDevice", null)
                        .WithMany("OidList")
                        .HasForeignKey("SnmpDeviceId");
                });

            modelBuilder.Entity("Models.TcpDataV2", b =>
                {
                    b.HasOne("Models.TcpDeviceV2", null)
                        .WithMany("TcpData")
                        .HasForeignKey("TcpDeviceV2Id");
                });

            modelBuilder.Entity("Models.SnmpDevice", b =>
                {
                    b.Navigation("OidList");
                });

            modelBuilder.Entity("Models.TcpDeviceV2", b =>
                {
                    b.Navigation("TcpData");
                });
#pragma warning restore 612, 618
        }
    }
}
